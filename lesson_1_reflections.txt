How did viewing a diff between two versions of a file help you see the bug that was introduced?

    find the difference that is with the most chance to cause bug.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    You can review all the way you develop the file and reverse back to any version you want to.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

    pros: you can decide on what kind of version you want to keep, and the versions can be kept seperately.
    cons: you need to keep in mind when need to munally create a commit, and also there would be too many versions.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    it can save a lot of time to find out all the related changes in other files and make all files in one repository consistant.

How can you use the commands git log and git diff to view the history of files?

    use git log to track all commits and find out the version changed info you want to know, and then use git diff following the first version and current version to find out the differences.

How might using version control make you more confident to make changes that could break something?

    I will be more confident to try to make many interesting changes and without fear of losing my last versions.